     1                                 %line 1+1 main.asm
     2                                 
     3                                 
     4                                 
     5                                 
     6                                 
     7                                 
     8                                 
     9                                 [section .data]
    10 00000000 0000                   bytTracker dw 0
    11 00000002 0000000000000000       envp dq 0
    12 0000000A 6D792D626173684020     startChar db "my-bash@",0x20
    13 00000013 2F7573722F62696E00     locCmd db "/usr/bin",0
    14 0000001C 436F6D6D616E64204E-    cmdNotFoundErr db "Command Not FoundðŸ˜ž",0xa
    15 0000001C 6F7420466F756E64F0-
    16 0000001C 9F989E0A           
    17                                 
    18                                 
    19                                 
    20                                 
    21                                 [section .bss]
    22 00000000 <gap>                  usrContent resq 131072
    23 00100000 <gap>                  cmdOutput resq 131072
    24 00200000 <gap>                  allUserInput resb 1024
    25 00200400 <gap>                  opt resb 100
    26 00200464 <gap>                  cmdLength resb 1
    27 00200465 <gap>                  addresOfExevArgs resq 3
    28 0020047D <gap>                  cmd resb 30
    29 0020049B <gap>                  currentCmdC resb 30
    30 002004B9 <gap>                  fullPath resb 30
    31 002004D7 <gap>                  pipFd resd 2
    32 002004DF <gap>                  usrFd resw 1
    33 002004E1 <gap>                  singleInput resb 1
    34                                 
    35                                 
    36                                 
    37                                 
    38                                 [section .text]
    39                                 [global _start]
    40                                 
    41                                 
    42                                 
    43                                 _start:
    44 00000000 488D0425[00000000]     lea rax ,[cmdOutput]
    45 00000008 E89E030000             call clearData
    46 0000000D 66C70425[00000000]-    mov word[bytTracker],0
    47 0000000D 0000               
    48 00000017 48C7C001000000         mov rax,1
    49 0000001E 48C7C701000000         mov rdi,1
    50 00000025 488D3425[00000000]     lea rsi,[startChar]
    51 0000002D 48C7C209000000         mov rdx,9
    52 00000034 0F05                   syscall
    53                                 
    54                                 getUserInput:
    55 00000036 48C7C000000000         mov rax,0
    56 0000003D 48C7C700000000         mov rdi,0
    57 00000044 488D3425[00000000]     lea rsi,[singleInput]
    58 0000004C 48C7C201000000         mov rdx,1
    59 00000053 0F05                   syscall
    60                                 
    61                                 saveInput:
    62 00000055 480FB70425[00000000]     movzx rax,word[bytTracker]
    63 0000005E 8A1C25[00000000]       mov bl,byte[singleInput]
    64 00000065 80FB0A                 cmp bl,0xa
    65 00000068 740C                   jz printInput
    66 0000006A 8898[00000000]         mov byte[allUserInput+rax],bl
    67 00000070 66FF0425[00000000]     inc word[bytTracker]
    68                                 
    69                                 
    70                                 printInput:
    71 00000078 48C7C001000000         mov rax,1
    72 0000007F 48C7C701000000         mov rdi,1
    73 00000086 488D3425[00000000]     lea rsi,[singleInput]
    74 0000008E 48C7C201000000         mov rdx,1
    75                                 
    76 00000095 759D                   jnz getUserInput
    77 00000097 4831DB                 xor rbx,rbx
    78 0000009A 49C7C0FFFFFFFF         mov r8,-1
    79 000000A1 48C7C1FFFFFFFF         mov rcx,-1
    80 000000A8 48C7C200000000         mov rdx,0
    81 000000AF 480FB60425[00000000]     movzx rax ,byte[bytTracker]
    82 000000B8 C680[00000000]00       mov byte[allUserInput+rax],0
    83                                 
    84                                 processInput:
    85                                  .getCmd:
    86 000000BF 49FFC0                  inc r8
    87 000000C2 418A98[00000000]        mov bl,byte[allUserInput+r8]
    88 000000C9 480FB70425[00000000]      movzx rax,word[bytTracker]
    89 000000D2 4C39C0                  cmp rax,r8
    90 000000D5 7426                    jz checkCmd
    91 000000D7 80FB20                  cmp bl,0x20
    92 000000DA 480F44DA                cmovz rbx,rdx
    93 000000DE 418898[00000000]        mov byte[cmd+r8],bl
    94 000000E5 75D6                    jnz .getCmd
    95                                 
    96                                 
    97                                  .getOpt:
    98 000000E7 49FFC0                  inc r8
    99 000000EA 48FFC1                  inc rcx
   100 000000ED 418A98[00000000]        mov bl,byte[allUserInput+r8]
   101 000000F4 80FB00                  cmp bl,0
   102 000000F7 8899[00000000]          mov byte[opt+rcx],bl
   103 000000FD 75E6                    jnz .getOpt
   104                                 
   105                                 
   106                                 checkCmd:
   107 000000FF 4929C8                 sub r8,rcx
   108 00000102 44880425[00000000]     mov byte[cmdLength],r8b
   109 0000010A 488D0425[00000000]     lea rax,[allUserInput]
   110 00000112 E894020000             call clearData
   111                                  .openUsrDir:
   112 00000117 48C7C002000000          mov rax,2
   113 0000011E 488D3C25[00000000]      lea rdi,[locCmd]
   114 00000126 48C7C600000100          mov rsi,0x10000
   115 0000012D 0F05                    syscall
   116 0000012F 66890425[00000000]      mov word[usrFd],ax
   117                                 
   118                                  .getUsrContent:
   119 00000137 480FB71C25[00000000]      movzx rbx,word[usrFd]
   120 00000140 48C7C0D9000000          mov rax,217
   121 00000147 4889DF                  mov rdi,rbx
   122 0000014A 488D3425[00000000]      lea rsi,[usrContent]
   123 00000152 48C7C200001000          mov rdx,1048576
   124 00000159 0F05                    syscall
   125 0000015B 4D31D2                  xor r10,r10
   126                                 
   127                                 
   128                                 
   129                                  .checkCItemIfValid:
   130 0000015E 4981FA00001000          cmp r10,1048576
   131 00000165 7D70                    jge .closeUsrDir
   132 00000167 418A82[13000000]        mov al,byte[usrContent+r10+19]
   133 0000016E 3C00                    cmp al,0
   134 00000170 7465                    jz .closeUsrDir
   135 00000172 4831C9                  xor rcx,rcx
   136 00000175 4D31DB                  xor r11,r11
   137 00000178 4D89D3                  mov r11,r10
   138 0000017B 4983C313                add r11,19
   139                                 
   140                                  .getCurrentCmdInDirent:
   141 0000017F 418A83[00000000]        mov al,byte[usrContent+r11]
   142 00000186 3C00                    cmp al,0
   143 00000188 8881[00000000]          mov byte[currentCmdC+rcx],al
   144 0000018E 7406                    jz .cmpCmds
   145 00000190 49FFC3                  inc r11
   146 00000193 48FFC1                  inc rcx
   147 00000196 EBE5                    jmp .getCurrentCmdInDirent
   148                                 
   149                                  .cmpCmds:
   150 00000198 FC                      cld
   151 00000199 480FB60C25[00000000]      movzx rcx,byte[cmdLength]
   152 000001A2 488D3425[00000000]      lea rsi,[cmd]
   153 000001AA 488D3C25[00000000]      lea rdi,[currentCmdC]
   154 000001B2 F3A6                    repe cmpsb
   155 000001B4 48C7C000000000          mov rax,0
   156 000001BB 48C7C301000000          mov rbx,1
   157 000001C2 4C0F44EB                cmovz r13,rbx
   158 000001C6 4C0F45E8                cmovnz r13,rax
   159 000001CA 740B                    jz .closeUsrDir
   160                                 
   161                                  .updateByteRead:
   162 000001CC 490FB782[10000000]      movzx rax,word[usrContent+r10+16]
   163 000001D4 4901C2                  add r10,rax
   164 000001D7 EB83                    jmp .checkCItemIfValid
   165                                 
   166                                  .closeUsrDir:
   167 000001D9 480FB70C25[00000000]      movzx rcx,word[usrFd]
   168 000001E2 48C7C003000000          mov rax,3
   169 000001E9 4889CF                  mov rdi,rcx
   170 000001EC 0F05                    syscall
   171                                 
   172 000001EE 4983FD00               cmp r13,0
   173 000001F2 7522                   jnz creatFullPathToCmd
   174                                 
   175                                 
   176                                 
   177                                 
   178                                 printCmdNotFound:
   179 000001F4 48C7C001000000         mov rax,1
   180 000001FB 48C7C701000000         mov rdi,1
   181 00000202 488D3425[00000000]     lea rsi,[cmdNotFoundErr]
   182 0000020A 48C7C216000000         mov rdx,22
   183 00000211 0F05                   syscall
   184 00000213 E9E3FDFFFF             jmp _start
   185                                 
   186                                 
   187                                 
   188                                 creatFullPathToCmd:
   189 00000218 49C7C0FFFFFFFF         mov r8,-1
   190 0000021F 48C7C1FFFFFFFF         mov rcx,-1
   191                                  .addUsrPath:
   192 00000226 49FFC0                  inc r8
   193 00000229 48FFC1                  inc rcx
   194 0000022C 480FB681[00000000]      movzx rax,byte[locCmd+rcx]
   195 00000234 48C7C32F000000          mov rbx,"/"
   196 0000023B 4883F800                cmp rax,0
   197 0000023F 480F44C3                cmovz rax,rbx
   198 00000243 418880[00000000]        mov byte[fullPath+r8],al
   199 0000024A 75D8                    jnz .addUsrPath
   200 0000024C 48C7C1FFFFFFFF          mov rcx,-1
   201                                 
   202                                  .addCmd:
   203 00000253 49FFC0                  inc r8
   204 00000256 48FFC1                  inc rcx
   205 00000259 480FB681[00000000]      movzx rax,byte[cmd+rcx]
   206 00000261 48C7C300000000          mov rbx,0
   207 00000268 4883F800                cmp rax,0
   208 0000026C 480F44C3                cmovz rax,rbx
   209 00000270 418880[00000000]        mov byte[fullPath+r8],al
   210 00000277 75D8                    jnz .addCmd
   211                                 
   212                                 
   213                                 createPip:
   214 00000279 48C7C016000000         mov rax,22
   215 00000280 488D3C25[00000000]     lea rdi,[pipFd]
   216 00000288 0F05                   syscall
   217                                 
   218                                 creatChildProc:
   219 0000028A 48C7C039000000         mov rax,57
   220 00000291 0F05                   syscall
   221 00000293 4883F800               cmp rax,0
   222 00000297 7406                   jz childProc
   223 00000299 7F79                   jg parentCont
   224 0000029B 0F8CF6000000           jl end
   225                                 
   226                                 
   227                                 
   228                                 
   229                                 
   230                                 childProc:
   231 000002A1 4831DB                 xor rbx,rbx
   232 000002A4 8B1C25[00000000]       mov ebx,dword[pipFd]
   233 000002AB 48C7C003000000         mov rax,3
   234 000002B2 4889DF                 mov rdi,rbx
   235 000002B5 0F05                   syscall
   236 000002B7 8B1C25[04000000]       mov ebx,dword[pipFd+4]
   237 000002BE 48C7C021000000         mov rax,33
   238 000002C5 4889DF                 mov rdi,rbx
   239 000002C8 48C7C601000000         mov rsi,1
   240 000002CF 0F05                   syscall
   241 000002D1 48C70425[00000000]-    mov qword[addresOfExevArgs],fullPath
   242 000002D1 [00000000]         
   243 000002DD 48C70425[08000000]-    mov qword[addresOfExevArgs+8],opt
   244 000002DD [00000000]         
   245 000002E9 48C70425[10000000]-    mov qword[addresOfExevArgs+16],0
   246 000002E9 00000000           
   247 000002F5 48C7C03B000000         mov rax ,59
   248 000002FC 488D3C25[00000000]     lea rdi,[fullPath]
   249 00000304 488D3425[00000000]     lea rsi,[addresOfExevArgs]
   250 0000030C 488D1425[00000000]     lea rdx,[envp]
   251 00000314 0F05                   syscall
   252                                 
   253                                 
   254                                 parentCont:
   255 00000316 4831C9                 xor rcx,rcx
   256 00000319 8B0C25[04000000]       mov ecx,dword[pipFd+4]
   257 00000320 48C7C003000000         mov rax,3
   258 00000327 4889CF                 mov rdi,rcx
   259 0000032A 0F05                   syscall
   260 0000032C 48C7C03D000000         mov rax,61
   261 00000333 48C7C7FFFFFFFF         mov rdi,-1
   262 0000033A 4831F6                 xor rsi,rsi
   263 0000033D 0F05                   syscall
   264                                 
   265                                 readDataFromChild:
   266 0000033F 8B0C25[00000000]       mov ecx,dword[pipFd]
   267 00000346 48C7C000000000         mov rax,0
   268 0000034D 4889CF                 mov rdi,rcx
   269 00000350 488D3425[00000000]     lea rsi,[cmdOutput]
   270 00000358 48C7C200001000         mov rdx,1048576
   271 0000035F 0F05                   syscall
   272 00000361 4831DB                 xor rbx,rbx
   273                                 
   274                                 
   275                                 
   276                                 printOutPutFromChild:
   277 00000364 8A83[00000000]         mov al,byte[cmdOutput+rbx]
   278 0000036A 880425[00000000]       mov byte[singleInput],al
   279 00000371 3C00                   cmp al,0
   280 00000373 0F8481FCFFFF           jz _start
   281 00000379 48C7C001000000         mov rax,1
   282 00000380 48C7C701000000         mov rdi,1
   283 00000387 488D3425[00000000]     lea rsi,[singleInput]
   284 0000038F 48C7C201000000         mov rdx,1
   285 00000396 0F05                   syscall
   286 00000398 48FFC3                 inc rbx
   287 0000039B EBC5                   jmp printOutPutFromChild
   288                                 
   289                                 
   290                                 
   291                                 end:
   292 0000039D 4831C9                 xor rcx,rcx
   293 000003A0 48C7C03C000000         mov rax,60
   294 000003A7 48C7C700000000         mov rdi,0
   295 000003AE 0F05                   syscall
   296                                 
   297                                 
   298                                 
   299                                 clearData:
   300 000003B0 48C7C1FFFFFFFF         mov rcx,-1
   301                                  .start:
   302 000003B7 48FFC1                  inc rcx
   303 000003BA 8A0408                  mov al,byte[rax+rcx]
   304 000003BD 3C00                    cmp al,0
   305 000003BF C6040800                mov byte[rax+rcx],0
   306 000003C3 75F0                    jnz .start
   307 000003C5 C3                     ret
   308                                 
