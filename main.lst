     1                                 %line 1+1 main.asm
     2                                 
     3                                 
     4                                 
     5                                 
     6                                 
     7                                 
     8                                 
     9                                 [section .data]
    10 00000000 0000                   bytTracker dw 0
    11 00000002 0000000000000000       envp dq 0
    12 0000000A 6D792D626173684020     startChar db "my-bash@",0x20
    13 00000013 2F7573722F62696E00     locCmd db "/usr/bin",0
    14 0000001C 436F6D6D616E64204E-    cmdNotFoundErr db "Command Not Found ðŸ˜ž",0xa,0
    15 0000001C 6F7420466F756E6420-
    16 0000001C F09F989E0A00       
    17 00000034 6D696E692D62617368-    cdCmdErr db "mini-bash: cd: No such file or folder ðŸ˜ž",0xa,0
    18 00000034 3A2063643A204E6F20-
    19 00000034 737563682066696C65-
    20 00000034 206F7220666F6C6465-
    21 00000034 7220F09F989E0A00   
    22 00000060 00                     isAllCmdP db 0
    23 00000061 00                     isCWDSet db 0
    24 00000062 636400                 cdCmd db "cd",0
    25 00000065 6C7300                 lsCmd db "ls",0
    26                                 
    27                                 
    28                                 
    29                                 [section .bss]
    30 00000000 <gap>                  usrContent resq 131072
    31 00100000 <gap>                  cmdOutput resq 2621440
    32 01500000 <gap>                  allUserInput resb 1024
    33 01500400 <gap>                  opt resb 100
    34 01500464 <gap>                  cmdLength resb 1
    35 01500465 <gap>                  addresOfExevArgs resq 3
    36 0150047D <gap>                  cmd resb 30
    37 0150049B <gap>                  currentCmdC resb 30
    38 015004B9 <gap>                  fullPath resb 30
    39 015004D7 <gap>                  pipFd resd 2
    40 015004DF <gap>                  usrFd resw 1
    41 015004E1 <gap>                  singleInput resb 1
    42 015004E2 <gap>                  cWkDir resb 1024
    43 015008E2 <gap>                  oldCWkDir resb 1024
    44                                 
    45                                 
    46                                 
    47                                 [section .text]
    48                                 [global _start]
    49                                 
    50                                 
    51                                 
    52                                 _start:
    53 00000000 488D0425[00000000]     lea rax,[cmdOutput]
    54 00000008 E86D040000             call clearData
    55 0000000D 66C70425[00000000]-    mov word[bytTracker],0
    56 0000000D 0000               
    57 00000017 48C7C001000000         mov rax,1
    58 0000001E 48C7C701000000         mov rdi,1
    59 00000025 488D3425[00000000]     lea rsi,[startChar]
    60 0000002D 48C7C209000000         mov rdx,9
    61 00000034 0F05                   syscall
    62 00000036 480FB60425[00000000]     movzx rax,byte[isAllCmdP]
    63 0000003F 4883F800               cmp rax,0
    64 00000043 7517                   jnz getUserInput
    65 00000045 E87C030000             call getAllCmd
    66 0000004A 480FB60425[00000000]     movzx rax,byte[isCWDSet]
    67 00000053 4883F800               cmp rax,0
    68 00000057 7503                   jnz getUserInput
    69 00000059 E8CA030000             call getCwd
    70                                 
    71                                 getUserInput:
    72 0000005E 48C7C000000000         mov rax,0
    73 00000065 48C7C700000000         mov rdi,0
    74 0000006C 488D3425[00000000]     lea rsi,[singleInput]
    75 00000074 48C7C201000000         mov rdx,1
    76 0000007B 0F05                   syscall
    77                                 
    78                                 saveInput:
    79 0000007D 480FB70425[00000000]     movzx rax,word[bytTracker]
    80 00000086 8A1C25[00000000]       mov bl,byte[singleInput]
    81 0000008D 80FB0A                 cmp bl,0xa
    82 00000090 740C                   jz printInput
    83 00000092 8898[00000000]         mov byte[allUserInput+rax],bl
    84 00000098 66FF0425[00000000]     inc word[bytTracker]
    85                                 
    86                                 printInput:
    87 000000A0 48C7C001000000         mov rax,1
    88 000000A7 48C7C701000000         mov rdi,1
    89 000000AE 488D3425[00000000]     lea rsi,[singleInput]
    90 000000B6 48C7C201000000         mov rdx,1
    91                                 
    92 000000BD 759D                   jnz getUserInput
    93 000000BF 4831DB                 xor rbx,rbx
    94 000000C2 49C7C0FFFFFFFF         mov r8,-1
    95 000000C9 48C7C1FFFFFFFF         mov rcx,-1
    96 000000D0 48C7C200000000         mov rdx,0
    97 000000D7 480FB60425[00000000]     movzx rax ,byte[bytTracker]
    98 000000E0 C680[00000000]00       mov byte[allUserInput+rax],0
    99                                 
   100                                 processInput:
   101                                  .getCmd:
   102 000000E7 49FFC0                  inc r8
   103 000000EA 418A98[00000000]        mov bl,byte[allUserInput+r8]
   104 000000F1 480FB70425[00000000]      movzx rax,word[bytTracker]
   105 000000FA 4C39C0                  cmp rax,r8
   106 000000FD 7457                    jz checkCmd
   107 000000FF 80FB20                  cmp bl,0x20
   108 00000102 480F44DA                cmovz rbx,rdx
   109 00000106 418898[00000000]        mov byte[cmd+r8],bl
   110 0000010D 75D6                    jnz .getCmd
   111                                 
   112                                  .getOpt:
   113 0000010F 49FFC0                  inc r8
   114 00000112 48FFC1                  inc rcx
   115 00000115 418A98[00000000]        mov bl,byte[allUserInput+r8]
   116 0000011C 80FB00                  cmp bl,0
   117 0000011F 8899[00000000]          mov byte[opt+rcx],bl
   118 00000125 75E6                    jnz .getOpt
   119                                 
   120 00000127 4929C8                 sub r8,rcx
   121 0000012A 44880425[00000000]     mov byte[cmdLength],r8b
   122 00000132 488D3425[00000000]     lea rsi,[cdCmd]
   123 0000013A 488D3C25[00000000]     lea rdi,[cmd]
   124 00000142 48C7C103000000         mov rcx,3
   125 00000149 E8FB020000             call compStringVal
   126 0000014E 4883F800               cmp rax,0
   127 00000152 0F8521020000           jnz processCdCmd
   128                                 
   129                                 
   130                                 checkCmd:
   131 00000158 488D0425[00000000]     lea rax,[allUserInput]
   132 00000160 E815030000             call clearData
   133 00000165 4D31D2                 xor r10,r10
   134                                  .checkCItemIfValid:
   135 00000168 4981FA00001000          cmp r10,1048576
   136 0000016F 7D60                    jge printCmdNotFound
   137 00000171 418A82[13000000]        mov al,byte[usrContent+r10+19]
   138 00000178 3C00                    cmp al,0
   139 0000017A 7455                    jz printCmdNotFound
   140 0000017C 4831C9                  xor rcx,rcx
   141 0000017F 4D31DB                  xor r11,r11
   142 00000182 4D89D3                  mov r11,r10
   143 00000185 4983C313                add r11,19
   144                                 
   145                                  .getCurrentCmdInDirent:
   146 00000189 418A83[00000000]        mov al,byte[usrContent+r11]
   147 00000190 3C00                    cmp al,0
   148 00000192 8881[00000000]          mov byte[currentCmdC+rcx],al
   149 00000198 7406                    jz .cmpCmds
   150 0000019A 49FFC3                  inc r11
   151 0000019D 48FFC1                  inc rcx
   152 000001A0 EBE5                    jmp .getCurrentCmdInDirent
   153                                 
   154                                  .cmpCmds:
   155 000001A2 480FB60C25[00000000]      movzx rcx,byte[cmdLength]
   156 000001AB 488D3425[00000000]      lea rsi,[cmd]
   157 000001B3 488D3C25[00000000]      lea rdi,[currentCmdC]
   158 000001BB E889020000              call compStringVal
   159 000001C0 4883F800                cmp rax,0
   160 000001C4 753D                    jnz creatFullPathToCmd
   161                                 
   162                                  .updateByteRead:
   163 000001C6 490FB782[10000000]      movzx rax,word[usrContent+r10+16]
   164 000001CE 4901C2                  add r10,rax
   165 000001D1 EB93                    jmp .checkCItemIfValid
   166                                 
   167                                 
   168                                 printCmdNotFound:
   169 000001D3 4C8D3425[00000000]     lea r14,[cmdNotFoundErr]
   170 000001DB 49C7C717000000         mov r15,23
   171 000001E2 E87C020000             call print
   172 000001E7 E90FFEFFFF             jmp _start
   173                                 
   174                                 printCdErr:
   175 000001EC 4C8D3425[00000000]     lea r14,[cdCmdErr]
   176 000001F4 49C7C72B000000         mov r15,43
   177 000001FB E863020000             call print
   178 00000200 E9F6FDFFFF             jmp _start
   179                                 
   180                                 creatFullPathToCmd:
   181 00000205 49C7C0FFFFFFFF         mov r8,-1
   182 0000020C 48C7C1FFFFFFFF         mov rcx,-1
   183                                  .addUsrPath:
   184 00000213 49FFC0                  inc r8
   185 00000216 48FFC1                  inc rcx
   186 00000219 480FB681[00000000]      movzx rax,byte[locCmd+rcx]
   187 00000221 48C7C32F000000          mov rbx,"/"
   188 00000228 4883F800                cmp rax,0
   189 0000022C 480F44C3                cmovz rax,rbx
   190 00000230 418880[00000000]        mov byte[fullPath+r8],al
   191 00000237 75D8                    jnz .addUsrPath
   192 00000239 48C7C1FFFFFFFF          mov rcx,-1
   193                                 
   194                                  .addCmd:
   195 00000240 49FFC0                  inc r8
   196 00000243 48FFC1                  inc rcx
   197 00000246 480FB681[00000000]      movzx rax,byte[cmd+rcx]
   198 0000024E 48C7C300000000          mov rbx,0
   199 00000255 4883F800                cmp rax,0
   200 00000259 480F44C3                cmovz rax,rbx
   201 0000025D 418880[00000000]        mov byte[fullPath+r8],al
   202 00000264 75D8                    jnz .addCmd
   203                                 
   204                                 
   205                                 createPip:
   206 00000266 48C7C016000000         mov rax,22
   207 0000026D 488D3C25[00000000]     lea rdi,[pipFd]
   208 00000275 0F05                   syscall
   209                                 
   210                                 creatChildProc:
   211 00000277 48C7C039000000         mov rax,57
   212 0000027E 0F05                   syscall
   213 00000280 4883F800               cmp rax,0
   214 00000284 7406                   jz childProc
   215 00000286 7F79                   jg parentCont
   216 00000288 0F8C24010000           jl end
   217                                 
   218                                 
   219                                 
   220                                 
   221                                 
   222                                 childProc:
   223 0000028E 4831DB                 xor rbx,rbx
   224 00000291 8B1C25[00000000]       mov ebx,dword[pipFd]
   225 00000298 48C7C003000000         mov rax,3
   226 0000029F 4889DF                 mov rdi,rbx
   227 000002A2 0F05                   syscall
   228 000002A4 8B1C25[04000000]       mov ebx,dword[pipFd+4]
   229 000002AB 48C7C021000000         mov rax,33
   230 000002B2 4889DF                 mov rdi,rbx
   231 000002B5 48C7C601000000         mov rsi,1
   232 000002BC 0F05                   syscall
   233 000002BE 48C70425[00000000]-    mov qword[addresOfExevArgs],fullPath
   234 000002BE [00000000]         
   235 000002CA 48C70425[08000000]-    mov qword[addresOfExevArgs+8],opt
   236 000002CA [00000000]         
   237 000002D6 48C70425[10000000]-    mov qword[addresOfExevArgs+16],0
   238 000002D6 00000000           
   239 000002E2 48C7C03B000000         mov rax ,59
   240 000002E9 488D3C25[00000000]     lea rdi,[fullPath]
   241 000002F1 488D3425[00000000]     lea rsi,[addresOfExevArgs]
   242 000002F9 488D1425[00000000]     lea rdx,[envp]
   243 00000301 0F05                   syscall
   244                                 
   245                                 
   246                                 parentCont:
   247 00000303 4831C9                 xor rcx,rcx
   248 00000306 8B0C25[04000000]       mov ecx,dword[pipFd+4]
   249 0000030D 48C7C003000000         mov rax,3
   250 00000314 4889CF                 mov rdi,rcx
   251 00000317 0F05                   syscall
   252 00000319 48C7C03D000000         mov rax,61
   253 00000320 48C7C7FFFFFFFF         mov rdi,-1
   254 00000327 4831F6                 xor rsi,rsi
   255 0000032A 0F05                   syscall
   256                                 
   257                                 readDataFromChild:
   258 0000032C 8B0C25[00000000]       mov ecx,dword[pipFd]
   259 00000333 48C7C000000000         mov rax,0
   260 0000033A 4889CF                 mov rdi,rcx
   261 0000033D 488D3425[00000000]     lea rsi,[cmdOutput]
   262 00000345 48C7C200001000         mov rdx,1048576
   263 0000034C 0F05                   syscall
   264 0000034E 4831DB                 xor rbx,rbx
   265                                 
   266                                 
   267                                 
   268                                 printOutPutFromChild:
   269 00000351 8A83[00000000]         mov al,byte[cmdOutput+rbx]
   270 00000357 880425[00000000]       mov byte[singleInput],al
   271 0000035E 3C00                   cmp al,0
   272 00000360 0F8494FCFFFF           jz _start
   273 00000366 4C8D3425[00000000]     lea r14,[singleInput]
   274 0000036E 49C7C701000000         mov r15,1
   275 00000375 E8E9000000             call print
   276 0000037A 48FFC3                 inc rbx
   277 0000037D EBD0                   jmp printOutPutFromChild
   278                                 
   279                                 processCdCmd:
   280 0000037F 48C7C050000000         mov rax,80
   281 00000386 488D3C25[00000000]     lea rdi,[opt]
   282 0000038E 0F05                   syscall
   283 00000390 4883F800               cmp rax,0
   284 00000394 0F8C4CFEFFFF           jl printCdErr
   285 0000039A 48C7C101000000         mov rcx,1
   286 000003A1 488D0425[00000000]     lea rax,[cWkDir]
   287 000003A9 E8CC000000             call clearData
   288 000003AE E875000000             call getCwd
   289 000003B3 E943FCFFFF             jmp _start
   290                                 
   291                                 
   292                                 end:
   293 000003B8 4831C9                 xor rcx,rcx
   294 000003BB 48C7C03C000000         mov rax,60
   295 000003C2 48C7C700000000         mov rdi,0
   296 000003C9 0F05                   syscall
   297                                 
   298                                 getAllCmd:
   299                                  .openUsrDir:
   300 000003CB 48C7C002000000          mov rax,2
   301 000003D2 488D3C25[00000000]      lea rdi,[locCmd]
   302 000003DA 48C7C600000100          mov rsi,0x10000
   303 000003E1 0F05                    syscall
   304 000003E3 66890425[00000000]      mov word[usrFd],ax
   305                                 
   306                                  .getUsrContent:
   307 000003EB 480FB71C25[00000000]      movzx rbx,word[usrFd]
   308 000003F4 48C7C0D9000000          mov rax,217
   309 000003FB 4889DF                  mov rdi,rbx
   310 000003FE 488D3425[00000000]      lea rsi,[usrContent]
   311 00000406 48C7C200001000          mov rdx,1048576
   312 0000040D 0F05                    syscall
   313                                 
   314                                  .closeUsrDir:
   315 0000040F 480FB70C25[00000000]      movzx rcx,word[usrFd]
   316 00000418 48C7C003000000          mov rax,3
   317 0000041F 4889CF                  mov rdi,rcx
   318 00000422 0F05                    syscall
   319                                 
   320 00000424 C60425[00000000]01     mov byte[isAllCmdP],1
   321 0000042C C3                     ret
   322                                 
   323                                 getCwd:
   324 0000042D 48C7C04F000000         mov rax,79
   325 00000434 488D3C25[00000000]     lea rdi,[cWkDir]
   326 0000043C 48C7C600020000         mov rsi,512
   327 00000443 0F05                   syscall
   328 00000445 C60425[00000000]01     mov byte[isCWDSet],1
   329 0000044D C3                     ret
   330                                 
   331                                 
   332                                 compStringVal:
   333 0000044E FC                     cld
   334 0000044F F3A6                   repe cmpsb
   335 00000451 49C7C400000000         mov r12,0
   336 00000458 49C7C501000000         mov r13,1
   337 0000045F 490F44C5               cmovz rax,r13
   338 00000463 490F45C4               cmovnz rax,r12
   339                                 
   340                                 
   341                                 
   342 00000467 C3                     ret
   343                                 
   344                                 print:
   345 00000468 48C7C001000000         mov rax,1
   346 0000046F 48C7C701000000         mov rdi,1
   347 00000476 498D36                 lea rsi,[r14]
   348 00000479 4C89FA                 mov rdx,r15
   349 0000047C 0F05                   syscall
   350 0000047E C3                     ret
   351                                 
   352                                 clearData:
   353 0000047F 48C7C1FFFFFFFF         mov rcx,-1
   354 00000486 4D31ED                 xor r13,r13
   355                                  .start:
   356 00000489 48FFC1                  inc rcx
   357 0000048C 448A2C08                mov r13b,byte[rax+rcx]
   358 00000490 4180FD00                cmp r13b,0
   359 00000494 C6040800                mov byte[rax+rcx],0
   360 00000498 75ED                    jnz .start
   361 0000049A C3                     ret
   362                                 
   363                                 
   364                                 
   365                                 
   366                                 
   367                                 
   368                                 
