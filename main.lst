     1                                 %line 1+1 main.asm
     2                                 
     3                                 
     4                                 
     5                                 
     6                                 
     7                                 
     8                                 
     9                                 [section .data]
    10 00000000 0000                   bytTracker dw 0
    11 00000002 0000000000000000       envp dq 0
    12 0000000A 6D792D626173684020     startChar db "my-bash@",0x20
    13 00000013 2F7573722F62696E00     locCmd db "/usr/bin",0
    14 0000001C 436F6D6D616E64204E-    cmdNotFoundErr db "Command Not FoundðŸ˜ž",0xa
    15 0000001C 6F7420466F756E64F0-
    16 0000001C 9F989E0A           
    17 00000032 00                     isAllCmdP db 0
    18 00000033 00                     isCWDSet db 0
    19                                 
    20                                 
    21                                 
    22                                 [section .bss]
    23 00000000 <gap>                  usrContent resq 131072
    24 00100000 <gap>                  cmdOutput resq 2621440
    25 01500000 <gap>                  allUserInput resb 1024
    26 01500400 <gap>                  opt resb 100
    27 01500464 <gap>                  cmdLength resb 1
    28 01500465 <gap>                  addresOfExevArgs resq 3
    29 0150047D <gap>                  cmd resb 30
    30 0150049B <gap>                  currentCmdC resb 30
    31 015004B9 <gap>                  fullPath resb 30
    32 015004D7 <gap>                  pipFd resd 2
    33 015004DF <gap>                  usrFd resw 1
    34 015004E1 <gap>                  singleInput resb 1
    35 015004E2 <gap>                  cWkDir resb 1024
    36                                 
    37                                 
    38                                 
    39                                 [section .text]
    40                                 [global _start]
    41                                 
    42                                 
    43                                 
    44                                 _start:
    45 00000000 488D0425[00000000]     lea rax,[cmdOutput]
    46 00000008 E8D4030000             call clearData
    47 0000000D 66C70425[00000000]-    mov word[bytTracker],0
    48 0000000D 0000               
    49 00000017 48C7C001000000         mov rax,1
    50 0000001E 48C7C701000000         mov rdi,1
    51 00000025 488D3425[00000000]     lea rsi,[startChar]
    52 0000002D 48C7C209000000         mov rdx,9
    53 00000034 0F05                   syscall
    54 00000036 480FB60425[00000000]     movzx rax,byte[isAllCmdP]
    55 0000003F 4883F800               cmp rax,0
    56 00000043 7517                   jnz getUserInput
    57 00000045 E814030000             call getAllCmd
    58 0000004A 480FB60425[00000000]     movzx rax,byte[isCWDSet]
    59 00000053 4883F800               cmp rax,0
    60 00000057 7503                   jnz getUserInput
    61 00000059 E862030000             call getCwd
    62                                 
    63                                 
    64                                 
    65                                 
    66                                 getUserInput:
    67 0000005E 48C7C000000000         mov rax,0
    68 00000065 48C7C700000000         mov rdi,0
    69 0000006C 488D3425[00000000]     lea rsi,[singleInput]
    70 00000074 48C7C201000000         mov rdx,1
    71 0000007B 0F05                   syscall
    72                                 
    73                                 saveInput:
    74 0000007D 480FB70425[00000000]     movzx rax,word[bytTracker]
    75 00000086 8A1C25[00000000]       mov bl,byte[singleInput]
    76 0000008D 80FB0A                 cmp bl,0xa
    77 00000090 740C                   jz printInput
    78 00000092 8898[00000000]         mov byte[allUserInput+rax],bl
    79 00000098 66FF0425[00000000]     inc word[bytTracker]
    80                                 
    81                                 
    82                                 printInput:
    83 000000A0 48C7C001000000         mov rax,1
    84 000000A7 48C7C701000000         mov rdi,1
    85 000000AE 488D3425[00000000]     lea rsi,[singleInput]
    86 000000B6 48C7C201000000         mov rdx,1
    87                                 
    88 000000BD 759D                   jnz getUserInput
    89 000000BF 4831DB                 xor rbx,rbx
    90 000000C2 49C7C0FFFFFFFF         mov r8,-1
    91 000000C9 48C7C1FFFFFFFF         mov rcx,-1
    92 000000D0 48C7C200000000         mov rdx,0
    93 000000D7 480FB60425[00000000]     movzx rax ,byte[bytTracker]
    94 000000E0 C680[00000000]00       mov byte[allUserInput+rax],0
    95                                 
    96                                 processInput:
    97                                  .getCmd:
    98 000000E7 49FFC0                  inc r8
    99 000000EA 418A98[00000000]        mov bl,byte[allUserInput+r8]
   100 000000F1 480FB70425[00000000]      movzx rax,word[bytTracker]
   101 000000FA 4C39C0                  cmp rax,r8
   102 000000FD 7426                    jz checkCmd
   103 000000FF 80FB20                  cmp bl,0x20
   104 00000102 480F44DA                cmovz rbx,rdx
   105 00000106 418898[00000000]        mov byte[cmd+r8],bl
   106 0000010D 75D6                    jnz .getCmd
   107                                 
   108                                 
   109                                  .getOpt:
   110 0000010F 49FFC0                  inc r8
   111 00000112 48FFC1                  inc rcx
   112 00000115 418A98[00000000]        mov bl,byte[allUserInput+r8]
   113 0000011C 80FB00                  cmp bl,0
   114 0000011F 8899[00000000]          mov byte[opt+rcx],bl
   115 00000125 75E6                    jnz .getOpt
   116                                 
   117                                 
   118                                 checkCmd:
   119 00000127 4929C8                 sub r8,rcx
   120 0000012A 44880425[00000000]     mov byte[cmdLength],r8b
   121 00000132 488D0425[00000000]     lea rax,[allUserInput]
   122 0000013A E8A2020000             call clearData
   123 0000013F 4D31D2                 xor r10,r10
   124                                  .checkCItemIfValid:
   125 00000142 4981FA00001000          cmp r10,1048576
   126 00000149 7D5A                    jge printCmdNotFound
   127 0000014B 418A82[13000000]        mov al,byte[usrContent+r10+19]
   128 00000152 3C00                    cmp al,0
   129 00000154 744F                    jz printCmdNotFound
   130 00000156 4831C9                  xor rcx,rcx
   131 00000159 4D31DB                  xor r11,r11
   132 0000015C 4D89D3                  mov r11,r10
   133 0000015F 4983C313                add r11,19
   134                                 
   135                                  .getCurrentCmdInDirent:
   136 00000163 418A83[00000000]        mov al,byte[usrContent+r11]
   137 0000016A 3C00                    cmp al,0
   138 0000016C 8881[00000000]          mov byte[currentCmdC+rcx],al
   139 00000172 7406                    jz .cmpCmds
   140 00000174 49FFC3                  inc r11
   141 00000177 48FFC1                  inc rcx
   142 0000017A EBE5                    jmp .getCurrentCmdInDirent
   143                                 
   144                                  .cmpCmds:
   145 0000017C FC                      cld
   146 0000017D 480FB60C25[00000000]      movzx rcx,byte[cmdLength]
   147 00000186 488D3425[00000000]      lea rsi,[cmd]
   148 0000018E 488D3C25[00000000]      lea rdi,[currentCmdC]
   149 00000196 F3A6                    repe cmpsb
   150 00000198 742F                    jz creatFullPathToCmd
   151                                 
   152                                  .updateByteRead:
   153 0000019A 490FB782[10000000]      movzx rax,word[usrContent+r10+16]
   154 000001A2 4901C2                  add r10,rax
   155 000001A5 EB99                    jmp .checkCItemIfValid
   156                                 
   157                                 
   158                                 
   159                                 
   160                                 
   161                                 printCmdNotFound:
   162 000001A7 48C7C001000000         mov rax,1
   163 000001AE 48C7C701000000         mov rdi,1
   164 000001B5 488D3425[00000000]     lea rsi,[cmdNotFoundErr]
   165 000001BD 48C7C216000000         mov rdx,22
   166 000001C4 0F05                   syscall
   167 000001C6 E930FEFFFF             jmp _start
   168                                 
   169                                 
   170                                 
   171                                 creatFullPathToCmd:
   172 000001CB 49C7C0FFFFFFFF         mov r8,-1
   173 000001D2 48C7C1FFFFFFFF         mov rcx,-1
   174                                  .addUsrPath:
   175 000001D9 49FFC0                  inc r8
   176 000001DC 48FFC1                  inc rcx
   177 000001DF 480FB681[00000000]      movzx rax,byte[locCmd+rcx]
   178 000001E7 48C7C32F000000          mov rbx,"/"
   179 000001EE 4883F800                cmp rax,0
   180 000001F2 480F44C3                cmovz rax,rbx
   181 000001F6 418880[00000000]        mov byte[fullPath+r8],al
   182 000001FD 75D8                    jnz .addUsrPath
   183 000001FF 48C7C1FFFFFFFF          mov rcx,-1
   184                                 
   185                                  .addCmd:
   186 00000206 49FFC0                  inc r8
   187 00000209 48FFC1                  inc rcx
   188 0000020C 480FB681[00000000]      movzx rax,byte[cmd+rcx]
   189 00000214 48C7C300000000          mov rbx,0
   190 0000021B 4883F800                cmp rax,0
   191 0000021F 480F44C3                cmovz rax,rbx
   192 00000223 418880[00000000]        mov byte[fullPath+r8],al
   193 0000022A 75D8                    jnz .addCmd
   194                                 
   195                                 
   196                                 createPip:
   197 0000022C 48C7C016000000         mov rax,22
   198 00000233 488D3C25[00000000]     lea rdi,[pipFd]
   199 0000023B 0F05                   syscall
   200                                 
   201                                 creatChildProc:
   202 0000023D 48C7C039000000         mov rax,57
   203 00000244 0F05                   syscall
   204 00000246 4883F800               cmp rax,0
   205 0000024A 7406                   jz childProc
   206 0000024C 7F79                   jg parentCont
   207 0000024E 0F8CF6000000           jl end
   208                                 
   209                                 
   210                                 
   211                                 
   212                                 
   213                                 childProc:
   214 00000254 4831DB                 xor rbx,rbx
   215 00000257 8B1C25[00000000]       mov ebx,dword[pipFd]
   216 0000025E 48C7C003000000         mov rax,3
   217 00000265 4889DF                 mov rdi,rbx
   218 00000268 0F05                   syscall
   219 0000026A 8B1C25[04000000]       mov ebx,dword[pipFd+4]
   220 00000271 48C7C021000000         mov rax,33
   221 00000278 4889DF                 mov rdi,rbx
   222 0000027B 48C7C601000000         mov rsi,1
   223 00000282 0F05                   syscall
   224 00000284 48C70425[00000000]-    mov qword[addresOfExevArgs],fullPath
   225 00000284 [00000000]         
   226 00000290 48C70425[08000000]-    mov qword[addresOfExevArgs+8],opt
   227 00000290 [00000000]         
   228 0000029C 48C70425[10000000]-    mov qword[addresOfExevArgs+16],0
   229 0000029C 00000000           
   230 000002A8 48C7C03B000000         mov rax ,59
   231 000002AF 488D3C25[00000000]     lea rdi,[fullPath]
   232 000002B7 488D3425[00000000]     lea rsi,[addresOfExevArgs]
   233 000002BF 488D1425[00000000]     lea rdx,[envp]
   234 000002C7 0F05                   syscall
   235                                 
   236                                 
   237                                 parentCont:
   238 000002C9 4831C9                 xor rcx,rcx
   239 000002CC 8B0C25[04000000]       mov ecx,dword[pipFd+4]
   240 000002D3 48C7C003000000         mov rax,3
   241 000002DA 4889CF                 mov rdi,rcx
   242 000002DD 0F05                   syscall
   243 000002DF 48C7C03D000000         mov rax,61
   244 000002E6 48C7C7FFFFFFFF         mov rdi,-1
   245 000002ED 4831F6                 xor rsi,rsi
   246 000002F0 0F05                   syscall
   247                                 
   248                                 readDataFromChild:
   249 000002F2 8B0C25[00000000]       mov ecx,dword[pipFd]
   250 000002F9 48C7C000000000         mov rax,0
   251 00000300 4889CF                 mov rdi,rcx
   252 00000303 488D3425[00000000]     lea rsi,[cmdOutput]
   253 0000030B 48C7C200001000         mov rdx,1048576
   254 00000312 0F05                   syscall
   255 00000314 4831DB                 xor rbx,rbx
   256                                 
   257                                 
   258                                 
   259                                 printOutPutFromChild:
   260 00000317 8A83[00000000]         mov al,byte[cmdOutput+rbx]
   261 0000031D 880425[00000000]       mov byte[singleInput],al
   262 00000324 3C00                   cmp al,0
   263 00000326 0F84CEFCFFFF           jz _start
   264 0000032C 48C7C001000000         mov rax,1
   265 00000333 48C7C701000000         mov rdi,1
   266 0000033A 488D3425[00000000]     lea rsi,[singleInput]
   267 00000342 48C7C201000000         mov rdx,1
   268 00000349 0F05                   syscall
   269 0000034B 48FFC3                 inc rbx
   270 0000034E EBC5                   jmp printOutPutFromChild
   271                                 
   272                                 
   273                                 
   274                                 end:
   275 00000350 4831C9                 xor rcx,rcx
   276 00000353 48C7C03C000000         mov rax,60
   277 0000035A 48C7C700000000         mov rdi,0
   278 00000361 0F05                   syscall
   279                                 
   280                                 
   281                                 
   282                                 getAllCmd:
   283                                  .openUsrDir:
   284 00000363 48C7C002000000          mov rax,2
   285 0000036A 488D3C25[00000000]      lea rdi,[locCmd]
   286 00000372 48C7C600000100          mov rsi,0x10000
   287 00000379 0F05                    syscall
   288 0000037B 66890425[00000000]      mov word[usrFd],ax
   289                                 
   290                                  .getUsrContent:
   291 00000383 480FB71C25[00000000]      movzx rbx,word[usrFd]
   292 0000038C 48C7C0D9000000          mov rax,217
   293 00000393 4889DF                  mov rdi,rbx
   294 00000396 488D3425[00000000]      lea rsi,[usrContent]
   295 0000039E 48C7C200001000          mov rdx,1048576
   296 000003A5 0F05                    syscall
   297                                 
   298                                  .closeUsrDir:
   299 000003A7 480FB70C25[00000000]      movzx rcx,word[usrFd]
   300 000003B0 48C7C003000000          mov rax,3
   301 000003B7 4889CF                  mov rdi,rcx
   302 000003BA 0F05                    syscall
   303                                 
   304 000003BC C60425[00000000]01     mov byte[isAllCmdP],1
   305 000003C4 C3                     ret
   306                                 
   307                                 
   308                                 
   309                                 getCwd:
   310 000003C5 48C7C04F000000         mov rax,79
   311 000003CC 488D3C25[00000000]     lea rdi,[cWkDir]
   312 000003D4 48C7C600020000         mov rsi,512
   313 000003DB 0F05                   syscall
   314 000003DD C60425[00000000]01     mov byte[isCWDSet],1
   315 000003E5 C3                     ret
   316                                 
   317                                 
   318                                 
   319                                 clearData:
   320 000003E6 48C7C1FFFFFFFF         mov rcx,-1
   321 000003ED 4D31ED                 xor r13,r13
   322                                  .start:
   323 000003F0 48FFC1                  inc rcx
   324 000003F3 448A2C08                mov r13b,byte[rax+rcx]
   325 000003F7 4180FD00                cmp r13b,0
   326 000003FB C6040800                mov byte[rax+rcx],0
   327 000003FF 75ED                    jnz .start
   328 00000401 C3                     ret
   329                                 
